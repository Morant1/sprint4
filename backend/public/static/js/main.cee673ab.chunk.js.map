{"version":3,"sources":["services/httpService.js","services/userService.js","store/actions/userActions.js","pages/Login.jsx","services/toyService.js","cmps/ToyPreview.jsx","cmps/ToyList.jsx","cmps/ToyFilter.jsx","pages/ToyApp.jsx","store/actions/toyActions.js","services/socketService.js","cmps/Chat.jsx","pages/ToyDetails.jsx","pages/ToyEdit.jsx","pages/Dashboard.jsx","services/branchService.js","pages/About.jsx","cmps/Navbar.jsx","App.jsx","serviceWorker.js","store/reducers/toyReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","login","logout","signup","getUsers","httpService","userCred","user","_handleLogin","alert","sessionStorage","clear","setItem","JSON","stringify","dispatch","userService","type","_Login","state","msg","loginCred","password","username","signupCred","isAdmin","componentDidMount","props","loadUsers","loginHandleChange","ev","target","name","value","setState","prevState","signupHandleChange","doLogin","preventDefault","userCreds","then","history","push","doSignup","signupCreds","Fragment","className","onSubmit","this","onChange","placeholder","autoComplete","required","htmlFor","style","color","id","Button","size","variant","Component","mapDispatchToProps","users","Login","connect","userReducer","loggedInUser","toyService","query","filterBy","queryStr","key","getById","remove","toyId","save","toy","_id","editedToy","addedToy","ToyPreview","removeToy","alt","width","src","price","onClick","to","ToyList","toys","map","defaultProps","ToyFilter","filter","inStock","sort","handleChange","field","onSetFilter","onFilter","InputLabel","Select","labelId","MenuItem","_ToyApp","loadToys","socket","ToyApp","toyReducer","setup","io","terminate","on","eventName","cb","off","emit","_Chat","typeMsg","from","loggedUser","txt","msgs","topic","addMsg","newMsg","sendMsg","socketService","msgHandleFocus","typingMsg","msgHandleBlur","msgHandleChange","onFocus","onBlur","padding","idx","listStyle","border","Chat","loggedinUser","ToyDetails","isPopUp","closePopup","loadToy","match","params","onGetBack","openPopUp","document","body","addEventListener","removeEventListener","prevProps","_Id","Date","createdAt","toDateString","_ToyEdit","handleInput","onSaveToy","updateToy","addToy","autoFocus","ToyEdit","_Dashboard","getToysType","reduce","acc","currVal","types","Object","keys","prices","values","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","title","display","text","Dashboard","branchService","branches","_About","center","lat","lng","zoom","onGetPos","coords","length","initialCenter","height","position","top","left","transform","google","branch","pos","visible","About","GoogleApiWrapper","apiKey","_Navbar","onLogout","fontSize","Navbar","withRouter","App","component","path","Boolean","hostname","initialState","localLoggedinUser","parse","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cee673ab.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/');// check\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nasync function login(userCred) {\r\n    console.log(\"login info\",userCred)\r\n    try {\r\n        const user = await httpService.post('auth/login', userCred)\r\n        return _handleLogin(user)\r\n    } catch {\r\n        alert(\"Please sign up first\")\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}","import userService from '../../services/userService';\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await userService.getUsers();\r\n      console.log(\"users\",users)\r\n      dispatch({ type: 'SET_USERS', users });\r\n    } catch (err) {\r\n      console.log('err in loadUsers', err);\r\n    };\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userCreds);\r\n    dispatch({ type: 'SET_USER', user });\r\n    return user;\r\n  };\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.signup(userCreds);\r\n    dispatch({ type: 'SET_USER', user });\r\n    return user;\r\n    // history.push('/toy');\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await userService.logout();\r\n    dispatch({ type: 'SET_USER', user: null });\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { loadUsers, login, logout, signup } from '../store/actions/userActions';\r\n\r\nclass _Login extends Component {\r\n    state = {\r\n        msg: '',\r\n        loginCred: {\r\n            password: '',\r\n            username: ''\r\n        },\r\n        signupCred: {\r\n            isAdmin: false,\r\n            password: '',\r\n            username: ''\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.loadUsers();\r\n    }\r\n\r\n    loginHandleChange = ev => {\r\n        const { name, value } = ev.target;\r\n        this.setState(prevState => ({\r\n            loginCred: {\r\n                ...prevState.loginCred,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    signupHandleChange = ev => {\r\n        let { name, value } = ev.target;\r\n        if (name === 'isAdmin') value = true;\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    doLogin = async ev => {\r\n        ev.preventDefault();\r\n        const { username, password } = this.state.loginCred;\r\n        if (!username || !password) {\r\n            return this.setState({ msg: 'Please enter username/password' });\r\n        }\r\n        const userCreds = { username, password };\r\n\r\n        this.props.login(userCreds)\r\n        .then(user=> {\r\n            if (user) this.props.history.push('/toy')\r\n        })\r\n\r\n        this.setState({ loginCred: { username: '', password: '' } });\r\n    };\r\n\r\n    doSignup = async ev => {\r\n        ev.preventDefault();\r\n        const { isAdmin, password, username } = this.state.signupCred;\r\n        console.log(\"sign-up Login\", this.state.signupCred)\r\n        if (!password || !username) {\r\n            return this.setState({ msg: 'Username & password inputs are required!' });\r\n        }\r\n        const signupCreds = { isAdmin, password, username };\r\n        \r\n        this.props.signup(signupCreds)\r\n        .then(user=> {\r\n            if (user) this.props.history.push('/toy')\r\n        })\r\n\r\n        // this.props.loadUsers(); // Store and DB are not the same!\r\n        this.setState({ signupCred: { isAdmin: false, password: '', username: '' } });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"log-sign-container flex center round\">\r\n                <form onSubmit={this.doSignup}>\r\n                    <h2>{this.state.msg}</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.signupCred.username}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"off\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.signupCred.password}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <label htmlFor=\"admin\" style={{color:'white'}}>Admin?</label>\r\n                    <input id=\"admin\" name=\"isAdmin\" type=\"checkbox\" value={true} onChange={this.signupHandleChange} />\r\n                    <br />\r\n\r\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">Signup</Button>\r\n                </form>\r\n                <form onSubmit={this.doLogin}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.loginCred.username}\r\n                        onChange={this.loginHandleChange}\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"off\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.loginCred.password}\r\n                        onChange={this.loginHandleChange}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">Login</Button>\r\n                </form>\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userReducer.users,\r\n        loggedInUser: state.userReducer.loggedInUser,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    loadUsers\r\n};\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","\r\nimport httpService from './httpService';\r\n\r\nexport const toyService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save\r\n}\r\n\r\nfunction query(filterBy) {\r\n    let queryStr ='?';\r\n\r\n    for (const key in filterBy) {\r\n        queryStr += `${key}=${filterBy[key]}&`;\r\n\r\n    }\r\n    return httpService.get(`toy${queryStr || ''}`);\r\n  }\r\n\r\n  \r\nasync function getById(toyId) {\r\n    const toy = await httpService.get(`toy/${toyId}`);\r\n    return toy\r\n\r\n}\r\n\r\nfunction remove(toyId) {\r\n    return httpService.delete(`toy/${toyId}`);\r\n  }\r\n\r\n\r\nasync function save(toy) {\r\n    if (toy._id) {\r\n        const editedToy  = await httpService.put(`toy/${toy._id}`, toy);\r\n        return editedToy\r\n    } else {\r\n        const addedToy  = await httpService.post(`toy`, toy);\r\n        console.log(\"addToy\",addedToy)\r\n        return addedToy\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Link}  from 'react-router-dom'\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport function ToyPreview({ toy,removeToy }) {\r\n\r\n    return (\r\n        <div className=\"toy-preview center\">\r\n            <img className=\"toy-img\" alt=\"toy-img\" style={{width:'30px'}} src=\"toy.png\"/>\r\n            <div className='type'>\r\n                {toy.type}\r\n                </div>\r\n            <hr/>\r\n            <h1 className=\"preview-name\">{toy.name}\r\n            </h1>\r\n            <h4>Price:{toy.price}$</h4>\r\n            <Button onClick={()=>removeToy(toy._id)} size=\"small\" variant=\"contained\" >Delete</Button>\r\n            <Link to={`/toy/${toy._id}`}><Button size=\"small\" variant=\"contained\">Details</Button></Link>\r\n            <Link to={`/toy/edit/${toy._id}`}><Button size=\"small\" variant=\"contained\">Edit</Button></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link}  from 'react-router-dom'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { ToyPreview } from './ToyPreview'\r\n\r\nexport function ToyList({ toys,removeToy }) {\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"add-toy\">\r\n        <Link to={`/toy/edit`}><Button size=\"small\" variant=\"contained\">Add toy</Button></Link>\r\n        </div>\r\n        <div className=\"grid-list-container\">\r\n            {\r\n                toys.map(toy => <ToyPreview removeToy={removeToy} toy={ toy } key={ toy._id } />)\r\n            }\r\n\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nToyList.propTypes = {\r\n    toys: PropTypes.array\r\n}\r\nToyList.defaultProps = {\r\n    toys: []\r\n}","import React, { Component } from 'react'\r\nimport { Select, MenuItem, InputLabel,Button } from '@material-ui/core';\r\n\r\n\r\nexport class ToyFilter extends Component {\r\n    state = {\r\n        filter: {\r\n            name: '',\r\n            inStock: '',\r\n            type: '',\r\n            sort: 'name'\r\n\r\n        }\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name;\r\n        let value = target.value;\r\n\r\n        this.setState(prevState => ({ filter: { ...prevState.filter, [field]: value } }),\r\n            () => this.props.onSetFilter(this.state.filter));\r\n\r\n    }\r\n\r\n    onFilter = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.onSetFilter(this.state.filter)\r\n    }\r\n\r\n    render() {\r\n        const { name, inStock, type, sort } = this.state.filter\r\n        return (\r\n            <form className=\"main-filter-container flex justify-center\" onSubmit={this.onFilter}>\r\n                <div className=\"filter-name\">\r\n                    <label className=\"by-name\">By name</label>\r\n                    <input type=\"text\" name='name' value={name} onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"filter-stock-type flex\">\r\n                <InputLabel id=\"stock Status\">Stock</InputLabel>\r\n                <Select labelId=\"stock Status\" name=\"inStock\" value={inStock} onChange={this.handleChange}>\r\n                    <MenuItem value=\"\">All</MenuItem>\r\n                    <MenuItem value=\"true\">IN STOCK</MenuItem>\r\n                    <MenuItem value=\"false\">OUT OF STOCK</MenuItem>\r\n                </Select>\r\n                <InputLabel id=\"type\">Type</InputLabel>\r\n                <Select labelId=\"type\" name=\"type\" value={type} onChange={this.handleChange}>\r\n                    <MenuItem value=\"\">All</MenuItem>\r\n                    <MenuItem value=\"Funny\">Funny</MenuItem>\r\n                    <MenuItem value=\"Educational\">Educational</MenuItem>\r\n                    <MenuItem value=\"Adult\">Adult</MenuItem>\r\n                </Select>\r\n                </div>\r\n                <div className=\"filter-sort flex\">\r\n                    <InputLabel id=\"sort\">Sort By</InputLabel>\r\n                    <Select labelId=\"sort\" name=\"sort\" value={sort} onChange={this.handleChange}>\r\n                        <MenuItem value=\"name\">name</MenuItem>\r\n                        <MenuItem value=\"price\">price</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <Button size=\"small\" variant=\"contained\">Filter</Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nimport { loadToys, removeToy } from '../store/actions/toyActions'\r\nimport { ToyList } from '../cmps/ToyList'\r\nimport { ToyFilter } from '../cmps/ToyFilter'\r\n\r\n\r\nclass _ToyApp extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            sort: 'name'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadToys(this.state.filterBy)\r\n    }\r\n\r\n    onSetFilter = (filterBy) => {\r\n        this.setState({ filterBy }, () => this.props.loadToys(this.state.filterBy))\r\n\r\n    }\r\n\r\n    render() {\r\n        const { toys } = this.props\r\n        if (!toys) return <div>Loading....</div>\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"main-header center\">\r\n                    <ToyFilter onSetFilter={this.onSetFilter}></ToyFilter>\r\n                </div>\r\n                <ToyList removeToy={this.props.removeToy} toys={toys} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    removeToy\r\n\r\n}\r\n\r\n_ToyApp.propTypes = {\r\n    toys: PropTypes.array\r\n}\r\n_ToyApp.defaultProps = {\r\n    toys: []\r\n}\r\n\r\nexport const ToyApp = connect(mapStateToProps, mapDispatchToProps)(_ToyApp)","import { toyService } from '../../services/toyService'\r\n\r\n\r\nexport function loadToys(filterBy) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(filterBy)\r\n            const toys = await toyService.query(filterBy);\r\n            dispatch({ type: 'SET_TOYS', toys })\r\n        } catch (err) {\r\n            console.log('err in loadToys', err);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function updateToy(toy) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(\"update\",toy)\r\n            await toyService.save(toy);\r\n            dispatch({ type: 'UPDATE_TOY', toy })\r\n        } catch (err) {\r\n            console.log('err in updateToy', err)\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport function addToy(toy) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(\"add\",toy)\r\n            await toyService.save(toy);\r\n            dispatch({ type: 'ADD_TOY', toy })\r\n        } catch (err) {\r\n            console.log('err in addToy', err)\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function removeToy(id) {\r\n    return async dispatch => {\r\n        try {\r\n            await toyService.remove(id);\r\n            dispatch({ type: 'REMOVE_TOY', id })\r\n        } catch (err) {\r\n            console.log('err in removeToy', err);\r\n        }\r\n    }\r\n}\r\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport socketService from '../services/socketService';\r\nclass _Chat extends Component {\r\n  state = {\r\n    typeMsg: '',\r\n    msg: { from: this.props.loggedUser, txt: '' },\r\n    msgs: [],\r\n    topic: this.props.id\r\n  };\r\n\r\n  componentDidMount() {\r\n    socketService.setup();\r\n    socketService.emit('chat topic', this.state.topic);\r\n    socketService.on('chat addMsg', this.addMsg);\r\n    socketService.on('chat history', msgs => {\r\n      this.setState({ msgs: msgs[this.state.topic] || []});\r\n\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('chat addMsg', this.addMsg);\r\n    socketService.terminate();\r\n  }\r\n\r\n  addMsg = newMsg => {\r\n    this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }));\r\n  };\r\n\r\n\r\n  sendMsg = ev => {\r\n    ev.preventDefault();\r\n    socketService.emit('chat newMsg', this.state.msg);\r\n    this.setState({ msg: { ...this.state.msg, txt: '' }, typeMsg: '' });\r\n  };\r\n\r\n  msgHandleFocus = ev => {\r\n    const typingMsg = `${this.state.msg.from} is typing...`;\r\n    socketService.emit('typing Msg', typingMsg);\r\n    this.setState({ typeMsg: typingMsg })\r\n  }\r\n\r\n  msgHandleBlur = ev => {\r\n    const typingMsg = '';\r\n    socketService.emit('typing Msg', typingMsg);\r\n    this.setState({ typeMsg: typingMsg })\r\n  }\r\n\r\n  msgHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        msg: {\r\n          ...prevState.msg,\r\n          [name]: value\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <form onSubmit={this.sendMsg}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.msg.txt}\r\n            onChange={this.msgHandleChange}\r\n            onFocus={this.msgHandleFocus}\r\n            onBlur={this.msgHandleBlur}\r\n            name=\"txt\"\r\n            autoComplete='off'\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n        {this.state.typeMsg && <div>{this.state.typeMsg}</div>}\r\n        <ul style={{ padding: '0' }}>\r\n          {this.state.msgs && this.state.msgs.map((msg, idx) => (\r\n\r\n            <li style={{ listStyle: 'none', border: '1px solid lightgrey' }} key={idx}><span style={{ color: \"lightblue\" }}>{msg.from}</span>: {msg.txt}</li>\r\n          ))}\r\n        </ul>\r\n        <hr />\r\n            ESC FOR CLOSE\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedUser: state.userReducer.loggedinUser.username\r\n  }\r\n}\r\n\r\nexport const Chat = connect(mapStateToProps)(_Chat)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nimport { toyService } from '../services/toyService';\r\nimport { Chat } from '../cmps/Chat'\r\n\r\n\r\nexport class ToyDetails extends Component {\r\n\r\n    state = {\r\n        toy: null,\r\n        isPopUp: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener('keydown', this.closePopup);\r\n        this.loadToy();\r\n    }\r\n    componentWillUnmount() {\r\n        document.body.removeEventListener('keydown', this.closePopup);\r\n      }\r\n\r\n    closePopup = (ev) => {\r\n        if (ev.key === \"Escape\"){\r\n            this.setState({isPopUp:false})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params._Id !== this.props.match.params._Id) {\r\n            this.loadToy()\r\n        }\r\n    }\r\n\r\n    loadToy = () => {\r\n        const toyId = this.props.match.params._id\r\n        toyService.getById(toyId)\r\n            .then(toy => this.setState({ toy }));\r\n\r\n\r\n    }\r\n\r\n    onGetBack = () => {\r\n        this.props.history.push('/toy')\r\n    }\r\n\r\n    openPopUp = () => {\r\n        this.setState({isPopUp:true});\r\n    }\r\n\r\n    render() {\r\n        const { toy, isPopUp } = this.state\r\n        if (!toy) return <div>Loading...</div>\r\n\r\n        return (\r\n            <div className=\"toy-details center\">\r\n                <div className=\"type\">Type:{toy.type}</div>\r\n                <hr />\r\n                <h1>Name:{toy.name}</h1>\r\n                <h2>Price:{toy.price}</h2>\r\n                <h3>CreatedAt:{new Date(toy.createdAt).toDateString()}</h3>\r\n                <h3>{toy.inStock ? 'IN STOCK' : 'NOT IN STOCK'}</h3>\r\n                <Button onClick={this.onGetBack} size=\"small\" variant=\"contained\">Back</Button>\r\n                <Button onClick={() => { this.openPopUp() }} size=\"small\" variant=\"contained\">Open Chat✉</Button>\r\n                {isPopUp && <Chat id={toy._id} name={toy.name}/>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from '@material-ui/core';\r\nimport { addToy, updateToy } from '../store/actions/toyActions.js';\r\nimport { toyService } from '../services/toyService.js';\r\n// import { cloudinary } from '../services/cloudinary-service.js';\r\n\r\n\r\nclass _ToyEdit extends Component {\r\n    state = {\r\n        toy: {\r\n            name: '',\r\n            price: '',\r\n            type: '',\r\n            inStock: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const toyId = this.props.match.params._id\r\n\r\n        if (toyId) {\r\n            toyService.getById(toyId)\r\n                .then(toy => {\r\n                    this.setState({ toy })\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params._id !== this.props.match.params._id) {\r\n            const toyId = this.props.match.params._id;\r\n            if (toyId) {\r\n                toyService.getById(toyId)\r\n                    .then(toy => {\r\n                        this.setState({ toy })\r\n                    })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name\r\n        let value = (target.type === 'number') ? +target.value : target.value;\r\n      \r\n       \r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                toy: {\r\n                    ...prevState.toy,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    onSaveToy = (ev) => {\r\n        ev.preventDefault()\r\n        const { toy } = this.state\r\n\r\n        if (this.state.toy._id) {\r\n            this.props.updateToy(toy)\r\n\r\n        } else {\r\n            this.props.addToy(toy)\r\n        }\r\n\r\n        this.props.history.push('/toy')\r\n\r\n    }\r\n\r\n    // uploadImg = (ev) => {\r\n    //     cloudinary.uploadImg(ev.target);\r\n    // }\r\n\r\n    render() {\r\n        const { toy } = this.state\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSaveToy} className=\"edit-toy flex\">\r\n                    <label>Name</label>\r\n                    <input autoFocus placeholder='Toy Name' type=\"text\" value={toy.name} onChange={this.handleInput} name=\"name\" />\r\n                    <label>Price</label>\r\n                    <input type=\"number\" value={toy.price} placeholder='Toy Price' onChange={this.handleInput} name=\"price\" />\r\n                    <label>Type</label>\r\n                    <input type=\"text\" value={toy.type} placeholder='Toy type' onChange={this.handleInput} name=\"type\" />\r\n                    <label>Stock status</label>\r\n                    <select name=\"inStock\" value={toy.inStock} onChange={this.handleInput}>\r\n                        <option value=\"true\">True</option>\r\n                        <option value=\"False\">False</option>\r\n                    </select>\r\n                    <Button type=\"submit\" size=\"small\" variant=\"contained\">Save</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToy,\r\n    updateToy\r\n}\r\n\r\nexport const ToyEdit = connect(mapStateToProps, mapDispatchToProps)(_ToyEdit)\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\n\r\n\r\n\r\nclass _Dashboard extends Component {\r\n  \r\n    getToysType = () => {\r\n        const data = this.props.toys.reduce(function (acc, currVal) {\r\n            if (!acc[currVal.type]) {\r\n                acc[currVal.type] = currVal.price;\r\n            } else {\r\n                acc[currVal.type] += currVal.price;\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        return {\r\n            types: Object.keys(data),\r\n            prices: Object.values(data)\r\n        }\r\n\r\n    }\r\n\r\n    onGetBack = () => {\r\n        this.props.history.push('/toy')\r\n    }\r\n\r\n    render() {\r\n        const { types, prices } = this.getToysType();\r\n        const data = {\r\n            labels: types,\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: ['rgba(255,0,0,0.3)', 'rgba(0,0,255,0.3)', 'rgba(255,255,0,0.3)'],\r\n                    borderColor: 'rgba(192,192,192,0.3)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(192,192,192,0.3)',\r\n                    hoverBorderColor: 'rgba(192,192,192,0.3)',\r\n                    data: prices\r\n                }\r\n            ]\r\n        };\r\n\r\n        const options = {\r\n            title: {\r\n                display: true,\r\n                text: 'Sum Potential income per type'\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Doughnut data={data} options={options}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const Dashboard = connect(mapStateToProps)(_Dashboard)","import httpService from './httpService';\r\n\r\n\r\nexport const branchService = {\r\n    query\r\n}\r\n\r\nasync function query() {\r\n    const branches = await httpService.get(`branch`);\r\n    return branches\r\n  }","import React, { Component } from 'react'\r\nimport { GoogleApiWrapper, Map, Marker, InfoWindow } from 'google-maps-react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { branchService } from '../services/branchService'\r\n\r\nclass _About extends Component {\r\n\r\n    state = {\r\n        branches: [],\r\n        center: {\r\n            lat: 32.0853,\r\n            lng: 34.7818\r\n        },\r\n        zoom: 7\r\n\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        branchService.query()\r\n            .then(branches => this.setState({ branches }, () => console.log(this.state)))\r\n    }\r\n\r\n    onGetPos = (coords) => {\r\n        this.setState({ center: coords, zoom: 14 })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { branches } = this.state\r\n        if (!branches.length) return <div>Loading...</div>\r\n\r\n        const style = {\r\n            width: '80%',\r\n            height: '80%',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%,-50%)'\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Map initialCenter={this.state.center} style={style} center={this.state.center} google={this.props.google} zoom={this.state.zoom}>\r\n\r\n                    {branches.map(branch => {\r\n                        return (\r\n                            <Marker key={branch._id} position={branch.pos}\r\n                                name={branch.name}>\r\n\r\n                                <InfoWindow visible={true}>\r\n                                    <div>{branch.name}\r\n                                    </div>\r\n                                </InfoWindow>\r\n                            </Marker>\r\n                        )\r\n                    })}\r\n                </Map>\r\n                <div className=\"locations center\">\r\n                    <Button size=\"small\" variant=\"contained\" onClick={() => { this.onGetPos({ \"lat\": 31.771959, \"lng\": 35.217018 }) }}>Jerusalem</Button>\r\n                    <Button size=\"small\" variant=\"contained\" onClick={() => { this.onGetPos({ \"lat\": 32.08088, \"lng\": 34.78057 }) }}>Tel Aviv</Button>\r\n                    <Button size=\"small\" variant=\"contained\" onClick={() => { this.onGetPos({ \"lat\": 32.794044, \"lng\": 34.989571 }) }}>Haifa</Button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport const About = GoogleApiWrapper({\r\n    apiKey: ('AIzaSyA7wFxeGayDFtxLfft53sDr7sMu9cj7Vio')\r\n})(_About)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core';\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { logout } from '../store/actions/userActions';\r\n\r\nclass _Navbar extends Component {\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n            .then(res => this.props.history.push('/'))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbar flex column\">\r\n                <div>\r\n                    {this.props.loggedinUser ?\r\n                        <Link to={`/toy`}><Button size=\"small\" variant=\"contained\">Home</Button></Link>\r\n                        :\r\n                        <Link to={`/`}><Button size=\"small\" variant=\"contained\">Home</Button></Link>\r\n                    }\r\n                    <Link to={`/about`}><Button size=\"small\" variant=\"contained\">About</Button></Link>\r\n                    {this.props.loggedinUser && <Link to={`/dash`}><Button size=\"small\" variant=\"contained\">Dashboard</Button></Link>}\r\n\r\n                </div>\r\n                <div>\r\n                    <Button className=\"logout\" onClick={this.onLogout} size=\"small\" variant=\"contained\">Logout\r\n                    <img className=\"toy-img\" alt=\"toy-img\" style={{width:'30px'}}src=\"toy.png\"/>\r\n                    </Button>\r\n                </div>\r\n                {this.props.loggedinUser &&\r\n                    <React.Fragment>\r\n                    <h1 className=\"center\">Welcome {this.props.loggedinUser.username}\r\n                        {this.props.loggedinUser.isAdmin ? <span style={{ fontSize: '14px', color: 'lightblue' }}>   (Admin)</span> : ''}\r\n                    </h1>\r\n                    <div style={{fontSize:\"10px\",color:\"lightgrey\"}}>*Edit/Delete/Add options for Admin only</div>\r\n                    </React.Fragment>}\r\n            </div>\r\n               \r\n        \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logout\r\n};\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Navbar))\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n\nimport { Login } from './pages/Login'\nimport { ToyApp } from './pages/ToyApp'\nimport { ToyDetails } from './pages/ToyDetails'\nimport { ToyEdit } from './pages/ToyEdit'\nimport { Dashboard } from './pages/Dashboard'\nimport { About } from './pages/About'\nimport {Navbar} from './cmps/Navbar';\n\n\n\nexport function App() {\n  return (\n    <div className=\"App main-container\">\n      <Navbar/>\n      <Switch>\n        <Route component={ToyEdit} path='/toy/edit/:_id?' />\n        <Route component={ToyDetails} path='/toy/:_id' />\n        <Route component={Dashboard} path='/dash' />\n        <Route component={About} path='/about' />\n        <Route component={ToyApp} path='/toy' />\n        <Route component={Login} path='/' />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    toys: []\r\n}\r\n\r\nexport function toyReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_TOYS':\r\n            return {\r\n                ...state,\r\n                toys: action.toys\r\n            }\r\n        case 'UPDATE_TOY':\r\n            return { ...state, toys: state.toys.map(toy => toy._id === action.toy._id ? action.toy : toy) }\r\n\r\n        case 'ADD_TOY':\r\n            return { ...state, toys: [...state.toys, action.toy] }\r\n\r\n        case 'REMOVE_TOY':\r\n            const toys = state.toys.filter(toy => toy._id !== action.id)\r\n            return { ...state, toys }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedinUser: localLoggedinUser\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedinUser: action.user\r\n            }\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { toyReducer } from './reducers/toyReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    toyReducer,\r\n    userReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\nstore.subscribe(() => {\r\n    console.log('Global state is:', store.getState())\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store/store';\nimport './assets/scss/global.scss'\n\nReactDOM.render(\n    <Provider store={ store }>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}